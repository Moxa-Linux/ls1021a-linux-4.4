#!/usr/bin/make -f

include /usr/share/dpkg/architecture.mk

export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# ls102xa architecture setting
export ARCH=arm
export CROSS_COMPILE=arm-linux-gnueabihf-

KERNEL_CONFIG := ls102xa_defconfig
KERNEL_NAME := 4.4.0-cip-rt-moxa-ls102xa
MOXA_DTBS := ls1021a-moxa-uc-8410a \
			 moxa-uc8410a \
			 moxa-uc8580 \
			 ls1021a-moxa-uc-8540

OUTPUT_DIR := output
MODULES_OUTDIR := $(OUTPUT_DIR)/modules
UIMAGE_DTBS_OUTDIR := $(OUTPUT_DIR)/uImage_dtbs
SCRIPTS_OUTDIR := $(OUTPUT_DIR)/scripts
HEADERS_OUTDIR := $(OUTPUT_DIR)/headers/linux-headers-$(KERNEL_NAME)

override_dh_auto_clean:
	$(MAKE) clean
	@rm -rf $(OUTPUT_DIR)

override_dh_auto_build:
# Create output directory
	@mkdir -p $(OUTPUT_DIR)
	@mkdir -p $(MODULES_OUTDIR)
	@mkdir -p $(UIMAGE_DTBS_OUTDIR)
	@mkdir -p $(SCRIPTS_OUTDIR)
	@mkdir -p $(HEADERS_OUTDIR)

# Configure kernel
	if [ ! -f ".config" ]; then \
		$(MAKE) $(KERNEL_CONFIG); \
	fi

# Prepare kernel information & tools needed
	$(MAKE) prepare
	$(MAKE) M=scripts

ifeq ($(DEB_HOST_ARCH), armhf)
# Compile kernel
	$(MAKE) -j $(shell nproc)

# Build uImage, device-trees, ITBs
	$(MAKE) uImage
	$(MAKE) dtbs
	cp arch/arm/boot/uImage $(UIMAGE_DTBS_OUTDIR)/uImage
	@for number in $(MOXA_DTBS); do \
		mv arch/arm/boot/dts/$$number.dtb $(UIMAGE_DTBS_OUTDIR)/$$number.dtb; \
	done

# Strip & install kernel modules
	$(MAKE) modules_install \
		INSTALL_MOD_STRIP=1 \
		INSTALL_MOD_PATH=$(MODULES_OUTDIR)
	@find $(MODULES_OUTDIR) -type l -exec rm -f {} +

# Copy files needed to kernel header package directory
	( \
		echo ".config"; \
		echo "Makefile"; \
		echo "Module.symvers"; \
		echo "arch/arm/Makefile"; \
		echo "arch/arm/kernel/module.lds"; \
		echo "include/config/auto.conf"; \
		echo "include/config/kernel.release"; \
		find arch/arm/ include/ -name "*.h" -o -name "Kbuild" -o -name "*.S"; \
	) | cpio -pd --preserve-modification-time $(HEADERS_OUTDIR)
endif

# Create kbuild tools
	$(MAKE) -f debian/Makefile.scripts \
		OUTDIR=$(SCRIPTS_OUTDIR)

override_dh_auto_install:
	$(info Skip dh_auto_install)

override_dh_install:
	dh_install

override_dh_strip:
	dh_strip --no-automatic-dbgsym

#
# Call debhelper for clean, build, binary
#
%:
	dh $@
